

CREATE TABLE department (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(100) NOT NULL
);

CREATE TABLE student (
    student_id INT PRIMARY KEY,
    student_name VARCHAR(100) NOT NULL,
    major VARCHAR(100),
    level VARCHAR(2), 
    age INT NOT NULL
);

CREATE TABLE professor (
    prof_id INT PRIMARY KEY,
    prof_name VARCHAR(100) NOT NULL,
    dept_id INT,
    FOREIGN KEY (dept_id) REFERENCES department(dept_id)
);

CREATE TABLE course (
    course_code VARCHAR(30) PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE semester_course (
    course_code VARCHAR(20),
    quarter VARCHAR(20), 
    year INT,
    prof_id INT,
    PRIMARY KEY (course_code, quarter, year),
    FOREIGN KEY (course_code) REFERENCES course(course_code),
    FOREIGN KEY (prof_id) REFERENCES professor(prof_id)
);

CREATE TABLE enrolled (
    student_id INT,
    course_code VARCHAR(20),
    quarter VARCHAR(20),
    year INT,
    enrolled_at DATE NOT NULL,
    PRIMARY KEY (student_id, course_code, quarter, year),
    FOREIGN KEY (student_id) REFERENCES student(student_id),
    FOREIGN KEY (course_code, quarter, year) REFERENCES semester_course(course_code, quarter, year)
);



INSERT INTO `student` (`student_id`, `student_name`, `major`, `level`, `age`) VALUES
(201, 'Maria White', 'English', 'SR', 21),
(202, 'Charles Harris', 'Architecture', 'SR', 22),
(203, 'Susan Martin', 'Law', 'JR', 20),
(204, 'Joseph Thompson', 'Computer Science', 'SO', 19),
(205, 'Christopher Garcia', 'Computer Science', 'JR', 20),
(206, 'Angela Martinez', 'History', 'SR', 19),
(207, 'Thomas Robinson', 'Psychology', 'SO', 18),
(208, 'Margaret Clark', 'Animal Science', 'FR', 18),
(209, 'Juan Rodriguez', 'Psychology', 'JR', 20),
(210, 'Dorthy Lewis', 'Finance', 'FR', 18),
(211, 'Daniel Lee', 'History', 'FR', 17),
(212, 'Lisa Walker', 'Computer Science', 'SO', 17),
(213, 'Paul Hall', 'Computer Science', 'JR', 18),
(214, 'Nancy Allen', 'Accounting', 'JR', 19),
(215, 'Mark Young', 'Finance', 'FR', 18),
(216, 'Luis Hernandez', 'Electrical Engineering', 'FR', 17),
(217, 'Donald King', 'Mechanical Engineering', 'SO', 19),
(218, 'George Wright', 'Education', 'SR', 21);


INSERT INTO `course` (`course_code`, `name`) VALUES
('CC10', 'Data Structures'),
('CC11', 'Database Systems'),
('CC12', 'Operating System Design'),
('CC13', 'Archaeology of the Incas'),
('CC14', 'Aviation Accident Investigation'),
('CC15', 'Air Quality Engineering'),
('CC16', 'Introductory Latin'),
('CC17', 'American Political Parties'),
('CC18', 'Social Cognition'),
('CC19', 'Perception'),
('CC20', 'Multivariate Analysis'),
('CC21', 'Patent Law'),
('CC22', 'Urban Economics'),
('CC23', 'Organic Chemistry');


INSERT INTO `department` (`dept_id`, `dept_name`) VALUES
(1, 'Chemistry'),
(2, 'Computer Science'),
(3, 'Civil'),
(4, 'Arts'),
(5, 'Electronics'),
(6, 'Mechanics');




INSERT INTO `professor` (`prof_id`, `prof_name`, `dept_id`) VALUES
(1, 'Ivana Teach', 1),
(2, 'James Smith', 1),
(3, 'Mary Johnson', 2),
(4, 'John Williams', 2),
(5, 'Patricia Jones', 2),
(6, 'Michael Miller', 3),
(7, 'Robert Brown', 4),
(8, 'Linda Davis', 5);



INSERT INTO `semester_course` (`course_code`, `quarter`, `year`, `prof_id`) VALUES
('CC10', 'Spring', 2014, 1),
('CC10', 'Spring', 2015, 1),
('CC11', 'Fall', 2012, 1),
('CC13', 'Fall', 2013, 1),
('CC14', 'Fall', 2015, 1),
('CC15', 'Spring', 2014, 1),
('CC15', 'Spring', 2015, 1),
('CC16', 'Spring', 2016, 1),
('CC17', 'Fall', 2016, 1),
('CC10', 'Spring', 2013, 2),
('CC18', 'Spring', 2016, 2),
('CC19', 'Fall', 2016, 3),
('CC10', 'Fall', 2016, 4),
('CC20', 'Summer', 2016, 4),
('CC12', 'Summer', 2016, 5),
('CC10', 'Spring', 2012, 6),
('CC11', 'Spring', 2016, 6),
('CC12', 'Spring', 2015, 6),
('CC12', 'Summer', 2012, 6),
('CC13', 'Fall', 2014, 6),
('CC14', 'Spring', 2013, 6);


INSERT INTO `enrolled` (`student_id`, `course_code`, `quarter`, `year`, `enrolled_at`) VALUES
(201, 'CC10', 'Spring', 2012, '2012-09-25'),
(201, 'CC10', 'Spring', 2013, '2013-09-25'),
(201, 'CC13', 'Fall', 2013, '2013-01-25'),
(201, 'CC14', 'Spring', 2013, '2013-09-25'),
(202, 'CC10', 'Spring', 2014, '2014-09-25'),
(202, 'CC11', 'Fall', 2012, '2012-01-25'),
(202, 'CC12', 'Summer', 2012, '2012-06-25'),
(202, 'CC15', 'Spring', 2014, '2014-09-25'),
(203, 'CC11', 'Spring', 2016, '2016-09-25'),
(203, 'CC12', 'Summer', 2012, '2012-06-25'),
(203, 'CC13', 'Fall', 2014, '2014-01-25'),
(204, 'CC10', 'Spring', 2015, '2015-09-25'),
(204, 'CC17', 'Fall', 2016, '2016-01-25'),
(204, 'CC18', 'Spring', 2016, '2016-09-25'),
(205, 'CC12', 'Spring', 2015, '2015-09-25'),
(206, 'CC10', 'Fall', 2016, '2016-01-25'),
(207, 'CC11', 'Spring', 2016, '2016-09-25'),
(207, 'CC16', 'Spring', 2016, '2016-09-25'),
(208, 'CC10', 'Spring', 2013, '2013-09-25'),
(208, 'CC12', 'Summer', 2016, '2016-06-25'),
(208, 'CC13', 'Fall', 2013, '2013-01-25'),
(208, 'CC14', 'Fall', 2015, '2015-01-25'),
(208, 'CC15', 'Spring', 2015, '2015-09-25'),
(209, 'CC10', 'Spring', 2012, '2012-09-25'),
(209, 'CC13', 'Fall', 2013, '2013-01-25'),
(209, 'CC14', 'Spring', 2013, '2013-09-25'),
(210, 'CC10', 'Spring', 2014, '2014-09-25'),
(210, 'CC11', 'Fall', 2012, '2012-01-25'),
(210, 'CC14', 'Spring', 2013, '2013-09-25'),
(210, 'CC15', 'Spring', 2014, '2014-09-25'),
(210, 'CC16', 'Spring', 2016, '2016-09-25'),
(211, 'CC10', 'Spring', 2014, '2014-09-25'),
(211, 'CC13', 'Fall', 2014, '2014-01-25'),
(211, 'CC15', 'Spring', 2014, '2014-09-25'),
(211, 'CC16', 'Spring', 2016, '2016-09-25'),
(211, 'CC17', 'Fall', 2016, '2016-01-25'),
(212, 'CC10', 'Spring', 2015, '2015-09-25'),
(212, 'CC13', 'Fall', 2014, '2014-01-25'),
(212, 'CC17', 'Fall', 2016, '2016-01-25'),
(212, 'CC18', 'Spring', 2016, '2016-09-25'),
(213, 'CC10', 'Spring', 2015, '2015-09-25'),
(213, 'CC12', 'Spring', 2015, '2015-09-25'),
(213, 'CC18', 'Spring', 2016, '2016-09-25'),
(214, 'CC12', 'Spring', 2015, '2015-09-25'),
(214, 'CC14', 'Fall', 2015, '2015-01-25'),
(215, 'CC10', 'Fall', 2016, '2016-01-25'),
(215, 'CC11', 'Spring', 2016, '2016-09-25'),
(215, 'CC12', 'Summer', 2012, '2012-06-25'),
(215, 'CC14', 'Fall', 2015, '2015-01-25'),
(215, 'CC15', 'Spring', 2015, '2015-09-25'),
(216, 'CC10', 'Fall', 2016, '2016-01-25'),
(216, 'CC10', 'Spring', 2012, '2012-09-25'),
(216, 'CC10', 'Spring', 2013, '2013-09-25'),
(216, 'CC11', 'Fall', 2012, '2012-01-25'),
(216, 'CC12', 'Summer', 2016, '2016-06-25'),
(216, 'CC15', 'Spring', 2015, '2015-09-25');







SELECT DISTINCT s.student_name
FROM student s
JOIN enrolled e ON s.student_id = e.student_id
JOIN semester_course sc ON e.course_code = sc.course_code 
    AND e.quarter = sc.quarter 
    AND e.year = sc.year
WHERE s.level = 'SR' AND sc.prof_id = 1;




		student_name

		Maria White
		Charles Harris








SELECT MAX(s.age) AS oldest_student_age
FROM student s
LEFT JOIN enrolled e ON s.student_id = e.student_id
LEFT JOIN semester_course sc ON e.course_code = sc.course_code 
    AND e.quarter = sc.quarter 
    AND e.year = sc.year
LEFT JOIN professor p ON sc.prof_id = p.prof_id
WHERE s.major = 'History' OR p.prof_name = 'Michael Miller';



		oldest_student_age

		22



SELECT p.prof_name
FROM professor p
LEFT JOIN semester_course sc ON p.prof_id = sc.prof_id
LEFT JOIN enrolled e ON sc.course_code = e.course_code 
    AND sc.quarter = e.quarter 
    AND sc.year = e.year
GROUP BY p.prof_id, p.prof_name
HAVING COUNT(e.student_id) < 5;





		prof_name

		Mary Johnson
		John Williams
		Patricia Jones
		Robert Brown
		Linda Davis








SELECT s.student_name
FROM student s
WHERE NOT EXISTS (
    SELECT sc.course_code
    FROM semester_course sc
    WHERE sc.prof_id = 2
    AND sc.course_code NOT IN (
        SELECT e.course_code
        FROM enrolled e
        WHERE e.student_id = s.student_id
    )
);



		student_name

		'Joseph Thompson'
		'Lisa Walker'
		'Paul Hall'







SELECT c.name AS course_name, c.course_code
FROM course c
LEFT JOIN semester_course sc ON c.course_code = sc.course_code
WHERE sc.course_code IS NULL

UNION

SELECT DISTINCT c.name AS course_name, c.course_code
FROM course c
JOIN semester_course sc ON c.course_code = sc.course_code
JOIN professor p ON sc.prof_id = p.prof_id
WHERE p.dept_id = (
    SELECT dept_id
    FROM department
    WHERE dept_name = 'Computer Science'
);



course_name	 		course_code
Patent Law			CC21
Urban Economics			CC22
Organic Chemistry		CC23
Perception			CC19
Data Structures			CC10
Multivariate Analysis		CC20
Operating System Design		CC12









SELECT c.name AS course_name, c.course_code, p.prof_name, p.prof_id
FROM course c
JOIN semester_course sc ON c.course_code = sc.course_code
JOIN professor p ON sc.prof_id = p.prof_id
GROUP BY c.course_code, p.prof_id, c.name, p.prof_name
HAVING COUNT(DISTINCT CONCAT(sc.quarter, sc.year)) >= 2;







course_name			course_code	prof_name		prof_id
Data Structures			CC10		Ivana Teach		1
Operating System Design		CC12		Michael Miller		6
Air Quality Engineering		CC15		Ivana Teach		1


